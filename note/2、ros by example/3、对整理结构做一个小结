对知识结构的整理
1、节点实现功能的最小单元，作为消息、话题、服务等基本概念的载体，实现客户-服务功能结构
2、launch文件整合节点，实现更高级的功能
3、高级launch文件整合低级launch文件，进一步提高功能等级
4、参数设置是使用过程中非常关键的功能
5、阅读视觉部分的node发现，这边也是要安装opencv2的。当然，在之前，我已经把教程中ros所需的包安装得差不多了
6、所以，ros就是个整合工具，结构搞清楚之后，重点工作还是放在如何制作节点及其相关资源
（1）package.xml
（2）CmakeList.txt
（3）launch
（4）参数配置、地图文件等资源文件
（5）ros的API，编辑节点
（6）rviz文件
（7）urdf
8、真要玩一个实实在在的机器人，把教程中的视觉、语义、SLAM等玩一把，至少需要烧钱一万以上吧。而要搞一个功能齐全的机器人，金钱是一方面，精力又是另一个投资了。光是简单的做出功能，任何一个方向都够我喝好几壶。但若只做功能不理清原理，就只能装装逼了，出去面试总不能说我样样精通吧，精通一样就衣食无忧了。不能把别人当傻逼。
（1）玩语音识别的设备成本稍低，但其它成本不清楚，毕竟还没玩过
（2）玩视觉的话，普通摄像头只能玩点低级的，深度摄像头、双目、激光等，都要花点银子
（3）玩SLAM的话，显然需要特殊设备的，据说难度也不小
（4）玩机器学习：前面几项都有些历史了，算是比较成熟，有一定的门槛，现在比较新出来的玩法，就是用机器学习来改善它们的效果。目前来看，玩机器学习就是玩算法，设备成本上还好
9、到现在，ROS是不是就该告一段落，或者为在相关领域上车多努力努力，多熟悉熟悉。



关于个人规划的选择
1、昨天跑了个语音识别的程序，发现识别率非常的低，而APP的IM功能里语音识别早就普及了。opencv也有专门的公司在玩，SLAM不清楚，但无人驾驶必过这一关，所以一定有巨头玩。所以我可以从小公司起步，最后去大公司安心玩。做不到这一点的话，还是想想如何在其它方面立足吧。不过想想看，时间成本确实高，而上车机会似乎不太多，而且刚起步的时候工资肯定不高。
2、做应用也是个选择，据说IPhone8摄像头要升级，莫非就是要搞深度或双目摄像头，到时候换个手机就可以玩视觉，也许是个不错的选择。这么多的新技术，应用创新的空间应该也不小吧。另外，有的技术在iOS中没有相关的包，我也可以考虑编译静态包去支持，这里就要玩C++了。总之，把iOS摸清，也是个选择。
3、转了个圈，觉得游戏也是应用的一种，重点还是创意，技术上大同小异。
4、机器学习是一个值得关注的地方，一方面资本市场越来越关注它，另一方面很多小的领域可以应用，而巨头们不可能关注去拿下每一个部分。





接下来的任务：
1、把近四个多月撸出来的游戏，技术作总结，代码要理顺；
2、在iOS平台做一个opencv的应用，相关技术都应该涉及，最重要的是，要做识别；
3、像SLAM、语音识别等方面的应用，都可以尝试在iOS平台实现；
4、有时间的话，搞个直播项目玩玩，还可以对其视频流做点其它处理；















